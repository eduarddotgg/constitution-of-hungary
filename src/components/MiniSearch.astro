---
import { Search } from 'astro-feather-icons'
---
<div class="w-full">

	<div class="flex w-full relative">
		<label for="search" class="hidden">Keresés</label>
		<input
			id="search"
			type="text"
			class={
				'search-input text-size-16 border border-gray-100 focus:border-gray-900 h-72 w-full rounded-24 pl-24 pr-192 py-12 transition-all'
			}
			data-search-inp
			placeholder="Cikk vagy kifejezés kereséséhez írjon be egy lekérdezést..."
		/>
		<button
			class="search-button bg-gray-900 flex items-center justify-center text-white h-72 px-24 gap-12 text-size-16 md:text-size-20 font-700 rounded-24 absolute top-0 right-0">
			<Search/>

			Keresés
		</button>
	</div>

	<div class="w-full relative" data-search-result></div>
</div>

<script>
	import type Fuse from 'fuse.js';
	import type { Searchable } from 'astro-fuse';

	const inp = document.querySelector<HTMLInputElement>('[data-search-inp]');
	const searchResult = document.querySelector('[data-search-result]');
	const searchButton = document.querySelector('.search-button');

	let inst: Fuse<Searchable>;
	let currentIndex = -1;

	function load() {
		if (!inst) {
			return loadFuse().then((_inst) => {
				inst = _inst;
				return inst;
			});
		}

		return Promise.resolve(inst);
	}

	function performSearch() {
		load()
			.then((fuse) => fuse.search(inp?.value))
			.then((results) => {
				if (!searchResult) {
					return;
				}

				if (!results.length) {
					searchResult.innerHTML = ``;
					return;
				}

				const listItems = results
					.map(({ item }, index) => `
                        <li class="suggestion-item ${index === currentIndex ? 'active' : ''}" data-index="${index}">
                            <a href="/chapter/${item.frontmatter.chapterSlug}" class="flex hover:bg-accent text-size-16 md:text-size-20 lg:text-size-24 font-700 py-8 px-24">${item.frontmatter.title}</a>
                        </li>
                    `)
					.join('');

				searchResult.innerHTML = `
                    <ul class="border border-gray-100 rounded-24 flex flex-col gap-4 max-h-240 overflow-y-auto backdrop-blur bg-white/10 absolute top-8 left-0 w-full py-12 z-10">
                        ${listItems}
                    </ul>
                `;
			});
	}

	function highlightItem(index) {
		const items = searchResult.querySelectorAll('.suggestion-item');
		items.forEach((item, idx) => {
			item.classList.toggle('bg-gray-900/5', idx === index);
		});
	}

	function clearState() {
		inp.value = '';
		searchResult.innerHTML = '';
		currentIndex = -1;
	}

	inp?.addEventListener("input", () => {
		currentIndex = -1;
		performSearch();
	});

	inp?.addEventListener("keydown", (event) => {
		const items = searchResult.querySelectorAll('.suggestion-item');
		if (event.key === 'Enter') {
			event.preventDefault();
			if (currentIndex >= 0 && items[currentIndex]) {
				const link = items[currentIndex].querySelector('a');
				if (link) {
					window.location.href = link.href;
				}
			} else {
				performSearch();
			}
			clearState();
		} else if (event.key === 'ArrowDown') {
			event.preventDefault();
			currentIndex = (currentIndex + 1) % items.length;
			highlightItem(currentIndex);
		} else if (event.key === 'ArrowUp') {
			event.preventDefault();
			currentIndex = (currentIndex - 1 + items.length) % items.length;
			highlightItem(currentIndex);
		}
	});

	searchButton?.addEventListener('click', (event) => {
		event.preventDefault();
		performSearch();
		clearState();
	});
</script>
